service: crud-api

plugins:
  - serverless-offline

custom:
  allowedHeaders:
    - Accept
    - Content-Type
    - Content-Length
    - Authorization
    - X-Amz-Date
    - X-Api-Key
    - X-Amz-Security-Token
    - X-Amz-User-Agent
    - app_user_id
    - app_subject
    - app_category
    - app_points

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-central-1
  stage: prod
  memorySize: 128
  timeout: 5
  endpointType: regional
  environment:
    QUESTION_TABLE: question
    SUBSCRIPTION_TABLE: subscritpion
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:Query
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: 
      - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/$QUESTION_TABLE"
      - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/$SUBSCRIPTION_TABLE"

functions:
  add-question:
    handler: question-add.handler
    description: POST /question
    events:
      - http:
          path: question
          method: post
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}
  update-question:
    handler: question-edit.handler
    description: PATCH /question
    events:
      - http:
          path: question
          method: patch
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}
  get-question:
    handler: question-get.handler
    description: GET /question
    events:
      - http:
          path: question
          method: get
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}
  delete-note:
    handler: question-delete.handler
    description: DELETE /question
    events:
      - http:
          path: question
          method: delete
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}
  add-subscription:
    handler: subscription-add.handler
    description: POST /subscription
    events:
      - http:
          path: subscription
          method: post
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}
  delete-subscription:
    handler: subscription-delete.handler
    description: DELETE /subscription
    events:
      - http:
          path: subscription
          method: delete
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}
  get-subscription:
    handler: subscription-get.handler
    description: GET /subscription
    events:
      - http:
          path: subscription
          method: get
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}

